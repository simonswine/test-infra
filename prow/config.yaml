plank:
  job_url_template: 'https://jetstack-build-infra.appspot.com/build/jetstack-logs/{{if eq .Spec.Type "presubmit"}}pr-logs/pull{{else if eq .Spec.Type "batch"}}pr-logs/pull{{else}}logs{{end}}{{if ne .Spec.Refs.Org ""}}{{if ne .Spec.Refs.Org "kubernetes"}}/{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}{{else if ne .Spec.Refs.Repo "kubernetes"}}/{{.Spec.Refs.Repo}}{{end}}{{end}}{{if eq .Spec.Type "presubmit"}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}{{else if eq .Spec.Type "batch"}}/batch{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}/'
  report_template: '[Full PR test history](https://jetstack-build-infra.appspot.com/pr/{{if eq .Spec.Refs.Org "kubernetes"}}{{if eq .Spec.Refs.Repo "kubernetes"}}{{else}}{{.Spec.Refs.Repo}}/{{end}}{{else}}{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}/{{end}}{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}). [Your PR dashboard](https://jetstack-build-infra.appspot.com/pr/{{with index .Spec.Refs.Pulls 0}}{{.Author}}{{end}}). Please help us cut down on flakes by [linking to](https://github.com/kubernetes/community/blob/master/contributors/devel/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/{{.Spec.Refs.Org}}/{{.Spec.Refs.Repo}}/issues?q=is:issue+is:open) when you hit one in your PR.'

jenkins_operator:
  job_url_template: 'https://jetstack-build-infra.appspot.com/build/jetstack-logs/{{if eq .Spec.Type "presubmit"}}pr-logs/pull{{else if eq .Spec.Type "batch"}}pr-logs/pull{{else}}logs{{end}}{{if ne .Spec.Refs.Org ""}}{{if ne .Spec.Refs.Org "kubernetes"}}/{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}{{else if ne .Spec.Refs.Repo "kubernetes"}}/{{.Spec.Refs.Repo}}{{end}}{{end}}{{if eq .Spec.Type "presubmit"}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}{{else if eq .Spec.Type "batch"}}/batch{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}/'
  report_template: '[Full PR test history](https://jetstack-build-infra.appspot.com/pr/{{if eq .Spec.Refs.Org "kubernetes"}}{{if eq .Spec.Refs.Repo "kubernetes"}}{{else}}{{.Spec.Refs.Repo}}/{{end}}{{else}}{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}/{{end}}{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}). [Your PR dashboard](https://jetstack-build-infra.appspot.com/pr/{{with index .Spec.Refs.Pulls 0}}{{.Author}}{{end}}). Please help us cut down on flakes by [linking to](https://github.com/kubernetes/community/blob/master/contributors/devel/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/{{.Spec.Refs.Org}}/{{.Spec.Refs.Repo}}/issues?q=is:issue+is:open) when you hit one in your PR.'

sinker:
  resync_period: 1h
  max_prowjob_age: 48h
  max_pod_age: 1h

# deck:
#   external_agent_logs:
#   - agent: jenkins
#     url_template: 'http://jenkins-operator/job/{{.Spec.Job}}/{{.Status.BuildID}}/consoleText'

prowjob_namespace: default
pod_namespace: test-pods
log_level: info

presets:
- labels:
    preset-service-account: true
  env:
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: /etc/service-account/service-account.json
  volumes:
  - name: service
    secret:
      secretName: service-account
  volumeMounts:
  - name: service
    mountPath: /etc/service-account
    readOnly: true

- labels:
    libvirt-socket: true
  volumes:
  - name: var-run-libvirt-libvirt-sock
    hostPath:
      path: /var/run/libvirt/libvirt-sock
      type: Socket
  volumeMounts:
  - name: var-run-libvirt-libvirt-sock
    mountPath: /var/run/libvirt/libvirt-sock

- labels:
    minikube-support: true
  volumeMounts:
  - name: var-lib-libvirt
    mountPath: /var/lib/libvirt
  - name: minikube-certs
    mountPath: /var/lib/libvirt/caches/minikube/.minikube/certs
  volumes:
  - name: var-lib-libvirt
    hostPath:
      path: /var/lib/libvirt
      type: Directory
  - name: minikube-certs
    emptyDir: {}
  env:
  - name: MINIKUBE_HOME
    value: /var/lib/libvirt/caches/minikube

- labels:
    minikube-size: medium
  env:
  - name: MINIKUBE_CPUS
    value: "4"
  - name: MINIKUBE_MEMORY
    value: "12288"

- labels:
    minikube-size: small
  env:
  - name: MINIKUBE_CPUS
    value: "3"
  - name: MINIKUBE_MEMORY
    value: "8192"

# storage / caching presets
- labels:
    preset-bazel-scratch-dir: true
  env:
  - name: TEST_TMPDIR
    value: /bazel-scratch/.cache/bazel
  volumes:
  - name: bazel-scratch
    emptyDir: {}
  volumeMounts:
  - name: bazel-scratch
    mountPath: /bazel-scratch/.cache

- labels:
    cert-manager-cloudflare-svc-acct: true
  env:
  - name: CLOUDFLARE_E2E_API_TOKEN
    valueFrom:
      secretKeyRef:
        name: cloudflare-api-key
        key: api-token
  - name: CLOUDFLARE_E2E_EMAIL
    valueFrom:
      secretKeyRef:
        name: cloudflare-api-key
        key: email
  - name: CLOUDFLARE_E2E_DOMAIN
    valueFrom:
      secretKeyRef:
        name: cloudflare-api-key
        key: domain

- labels:
    preset-bazel-remote-cache-enabled: true
  env:
  - name: BAZEL_REMOTE_CACHE_ENABLED
    value: "true"


# minikube size job templates
.minikube_medium: &minikube_medium
  resources:
    requests:
      cpu: 3800m
      memory: 12Gi

.minikube_small: &minikube_small
  resources:
    requests:
      cpu: 2900m
      memory: 8Gi

tide:
  target_url: https://prow.build-infra.jetstack.net/tide.html
  queries:
  - repos:
    - jetstack/puppet-module-aws_ebs
    - jetstack/puppet-module-calico
    - jetstack/puppet-module-etcd
    - jetstack/puppet-module-kubernetes
    - jetstack/puppet-module-kubernetes_addons
    - jetstack/puppet-module-prometheus
    - jetstack/puppet-module-tarmak
    - jetstack/puppet-module-vault_client
    - jetstack/test-infra
    - jetstack/navigator
    - jetstack/cert-manager
    - jetstack/vault-unsealer
    - jetstack/vault-helper
    labels:
    - lgtm
    - approved
    missingLabels:
    - needs-ok-to-test
    - do-not-merge
    - do-not-merge/blocked-paths
    - do-not-merge/cherry-pick-not-approved
    - do-not-merge/hold
    - do-not-merge/release-note-label-needed
    - do-not-merge/work-in-progress
    - needs-rebase

# push_gateway:
#   endpoint: pushgateway


# job templates

# puppet module verify using ruby tooling
.puppet_module_verify: &puppet_module_verify
  always_run: true
  skip_report: false
  max_concurrency: 4
  agent: kubernetes
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/jetstack-build-infra/ruby-2.3:0.5
      args:
      - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
      - "--root=/workspace"
      - "--upload=gs://jetstack-logs/pr-logs"
      - "--clean"
      env:
      - name: BUNDLE_DIR
        value: /cache/bundle/$(JOB_NAME)
      resources:
        requests:
          cpu: 750m
          memory: 1Gi
      volumeMounts:
      - name: bundle-cache
        mountPath: /cache/bundle
    volumes:
    - name: bundle-cache
      hostPath:
        path: /var/lib/libvirt/caches/bundle
        type: Directory
  trigger: "(?m)^/test( all| verify| quick verify),?(\\s+|$)"
  rerun_command: "/test verify"

# puppet module acceptance tests using ruby tooling, elevated privileges due
# to requirement to run nested VMs
.puppet_module_acceptance: &puppet_module_acceptance
  always_run: true
  skip_report: false
  max_concurrency: 2
  agent: kubernetes
  labels:
    preset-service-account: true
    libvirt-socket: true
  spec:
    nodeSelector:
      node-role.kubernetes.io/libvirt: ""
    # Note: this is not supported yet by prow PodSpec, taint temporary removed
    tolerations:
    - effect: NoSchedule
      key: dedicated
      operator: Equal
    containers:
    - image: gcr.io/jetstack-build-infra/ruby-2.3:0.5
      args:
      - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
      - "--root=/workspace"
      - "--upload=gs://jetstack-logs/pr-logs"
      - "--clean"
      env:
      - name: BUNDLE_DIR
        value: /cache/bundle/$(JOB_NAME)
      resources:
        requests:
          cpu: 750m
          memory: 1Gi
      volumeMounts:
      - name: bundle-cache
        mountPath: /cache/bundle
      - name: vagrant-boxes
        mountPath: /root/.vagrant.d/boxes
    volumes:
    - name: bundle-cache
      hostPath:
        path: /var/lib/libvirt/caches/bundle
        type: Directory
    - name: vagrant-boxes
      hostPath:
        path: /var/lib/libvirt/caches/vagrant-boxes
        type: Directory
  trigger: "(?m)^/test( all| acceptance),?(\\s+|$)"
  rerun_command: "/test acceptance"

presubmits:
  jetstack/navigator:
  - name: pull-navigator-bazel-verify
    agent: kubernetes
    context: pull-navigator-bazel-verify
    always_run: false
    rerun_command: "/test pull-navigator-bazel-verify"
    trigger: "(?m)^/test pull-navigator-bazel-verify,?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-bazel-scratch-dir: true
      preset-bazel-remote-cache-enabled: true
    spec:
      containers:
      - image: gcr.io/jetstack-build-infra/bazelbuild:v20180321-d7679e93b-0.11.1
        imagePullPolicy: IfNotPresent
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--upload=gs://jetstack-logs/pr-logs"
        - "--scenario=kubernetes_bazel"
        - "--" # end bootstrap args, scenario args below
        - --test=//cmd/... //pkg/... //internal/... //plugin/...
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "2Gi"

  - name: pull-navigator-e2e-v1-9
    context: pull-navigator-e2e-v1-9
    always_run: false
    trigger: "(?m)^/test( bazel-e2e( v?1.9)?|)( \\[.+\\])?$"
    rerun_command: "/test bazel-e2e v1.9"
    skip_report: false
    max_concurrency: 4
    agent: kubernetes
    labels:
      preset-service-account: true
      preset-bazel-remote-cache-enabled: true
      libvirt-socket: true
      minikube-support: true
      minikube-size: medium
    spec:
      nodeSelector:
        node-role.kubernetes.io/libvirt: ""
      # Note: this is not supported yet by prow PodSpec, taint temporary removed
      tolerations:
      - effect: NoSchedule
        key: dedicated
        operator: Equal
      containers:
      - image: gcr.io/jetstack-build-infra/minikube-in-go-v1.9.6:0.12
        args:
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://jetstack-logs/pr-logs"
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--scenario=minikube"
        - "--"
        - make
        - e2e-test
        <<: *minikube_medium
        securityContext:
          privileged: true

  - name: navigator-quick-verify
    always_run: true
    skip_report: false
    context: navigator-quick-verify
    max_concurrency: 2
    agent: kubernetes
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/jetstack-build-infra/gcloud-in-go:0.10
        args:
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://jetstack-logs/pr-logs"
        - "--clean"
        resources:
          requests:
            cpu: 1
            memory: 1Gi
    trigger: "(?m)^/test( all| verify| quick verify),?(\\s+|$)"
    rerun_command: "/test verify"

  - name: navigator-e2e-v1-7
    context: navigator-e2e-v1-7
    always_run: true
    trigger: "(?m)^/test( all| e2e( v?1.7)?|)( \\[.+\\])?$"
    rerun_command: "/test e2e v1.7"
    skip_report: false
    max_concurrency: 4
    agent: kubernetes
    labels:
      preset-service-account: true
      libvirt-socket: true
      minikube-support: true
      minikube-size: medium
    spec:
      nodeSelector:
        node-role.kubernetes.io/libvirt: ""
      # Note: this is not supported yet by prow PodSpec, taint temporary removed
      tolerations:
      - effect: NoSchedule
        key: dedicated
        operator: Equal
      containers:
      - image: gcr.io/jetstack-build-infra/minikube-in-go-v1.7.15:0.12
        args:
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://jetstack-logs/pr-logs"
        - "--clean"
        <<: *minikube_medium
        securityContext:
          privileged: true

  - name: navigator-e2e-v1-8
    context: navigator-e2e-v1-8
    always_run: true
    trigger: "(?m)^/test( all| e2e( v?1.8)?|)( \\[.+\\])?$"
    rerun_command: "/test e2e v1.8"
    skip_report: false
    max_concurrency: 4
    agent: kubernetes
    labels:
      preset-service-account: true
      libvirt-socket: true
      minikube-support: true
      minikube-size: medium
    spec:
      nodeSelector:
        node-role.kubernetes.io/libvirt: ""
      # Note: this is not supported yet by prow PodSpec, taint temporary removed
      tolerations:
      - effect: NoSchedule
        key: dedicated
        operator: Equal
      containers:
      - image: gcr.io/jetstack-build-infra/minikube-in-go-v1.8.10:0.12
        args:
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://jetstack-logs/pr-logs"
        - "--clean"
        <<: *minikube_medium
        securityContext:
          privileged: true

  - name: navigator-e2e-v1-9
    context: navigator-e2e-v1-9
    always_run: true
    trigger: "(?m)^/test( all| e2e( v?1.9)?|)( \\[.+\\])?$"
    rerun_command: "/test e2e v1.9"
    skip_report: false
    max_concurrency: 4
    agent: kubernetes
    labels:
      preset-service-account: true
      libvirt-socket: true
      minikube-support: true
      minikube-size: medium
    spec:
      nodeSelector:
        node-role.kubernetes.io/libvirt: ""
      # Note: this is not supported yet by prow PodSpec, taint temporary removed
      tolerations:
      - effect: NoSchedule
        key: dedicated
        operator: Equal
      containers:
      - image: gcr.io/jetstack-build-infra/minikube-in-go-v1.9.6:0.12
        args:
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://jetstack-logs/pr-logs"
        - "--clean"
        <<: *minikube_medium
        securityContext:
          privileged: true

  - name: navigator-e2e-v1-10
    context: navigator-e2e-v1-10
    always_run: false
    trigger: "(?m)^/test( all| e2e( v?1.10)?|)( \\[.+\\])?$"
    rerun_command: "/test e2e v1.10"
    skip_report: false
    max_concurrency: 4
    agent: kubernetes
    labels:
      preset-service-account: true
      libvirt-socket: true
      minikube-support: true
      minikube-size: medium
    spec:
      nodeSelector:
        node-role.kubernetes.io/libvirt: ""
      # Note: this is not supported yet by prow PodSpec, taint temporary removed
      tolerations:
      - effect: NoSchedule
        key: dedicated
        operator: Equal
      containers:
      - image: gcr.io/jetstack-build-infra/minikube-in-go-v1.10.0:0.12
        args:
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://jetstack-logs/pr-logs"
        - "--clean"
        <<: *minikube_medium
        securityContext:
          privileged: true

  - name: navigator-kubetest-e2e
    agent: kubernetes
    context: pull-navigator-kubetest
    rerun_command: "/test kubetest-e2e"
    trigger: "(?m)^/test kubetest-e2e,?(\\s+|$)"
    always_run: false
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bootstrap:v20180122-6fd3aef1a
        args:
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://jetstack-logs/pr-logs"
        - "--timeout=90"
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: true
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        volumeMounts:
        # - name: cache-ssd
        #   mountPath: /root/.cache
        # - name: docker-graph
        #   mountPath: /docker-graph
        - name: var-lib-docker
          mountPath: /var/lib/docker
        # TODO: not sure if we can run parallel builds
        # ports:
        # - containerPort: 9999
        #   hostPort: 9999
        resources:
          requests:
            cpu: 3800m
            memory: "12Gi"
      volumes:
      # TODO: re-enable cache volumes
      # - name: cache-ssd
      #   hostPath:
      #     path: /mnt/disks/ssd0
      # - name: docker-graph
      #   hostPath:
      #     path: /mnt/disks/ssd0/docker-graph
      - name: var-lib-docker
        emptyDir: {}

  jetstack/cert-manager:
  - name: cert-manager-quick-verify
    always_run: true
    skip_report: false
    context: cert-manager-quick-verify
    max_concurrency: 2
    agent: kubernetes
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/jetstack-build-infra/gcloud-in-go:0.10
        args:
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://jetstack-logs/pr-logs"
        - "--clean"
        resources:
          requests:
            cpu: 1
            memory: 1Gi
    trigger: "(?m)^/test( all| verify| quick verify),?(\\s+|$)"
    rerun_command: "/test verify"

  - name: cert-manager-e2e-v1-7
    context: cert-manager-e2e-v1-7
    trigger: "(?m)^/test( all| e2e( v?1.7)?|)( \\[.+\\])?$"
    rerun_command: "/test e2e v1.7"
    # Match everything except PRs that only touch docs/
    run_if_changed: (^[^d].*$)|(^.[^o].*$)|(^..[^c].*$)|(^...[^s].*$)|(^....[^/].*$)
    skip_report: false
    max_concurrency: 4
    agent: kubernetes
    labels:
      cert-manager-cloudflare-svc-acct: true
      preset-service-account: true
      libvirt-socket: true
      minikube-support: true
      minikube-size: small
    spec:
      nodeSelector:
        node-role.kubernetes.io/libvirt: ""
      # Note: this is not supported yet by prow PodSpec, taint temporary removed
      tolerations:
      - effect: NoSchedule
        key: dedicated
        operator: Equal
      containers:
      - image: gcr.io/jetstack-build-infra/minikube-in-go-v1.7.15:0.12
        args:
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://jetstack-logs/pr-logs"
        - "--clean"
        <<: *minikube_small
        securityContext:
          privileged: true

  - name: cert-manager-e2e-v1-8
    context: cert-manager-e2e-v1-8
    trigger: "(?m)^/test( all| e2e( v?1.8)?|)( \\[.+\\])?$"
    rerun_command: "/test e2e v1.8"
    # Match everything except PRs that only touch docs/
    run_if_changed: (^[^d].*$)|(^.[^o].*$)|(^..[^c].*$)|(^...[^s].*$)|(^....[^/].*$)
    skip_report: false
    max_concurrency: 4
    agent: kubernetes
    labels:
      cert-manager-cloudflare-svc-acct: true
      preset-service-account: true
      libvirt-socket: true
      minikube-support: true
      minikube-size: small
    spec:
      nodeSelector:
        node-role.kubernetes.io/libvirt: ""
      # Note: this is not supported yet by prow PodSpec, taint temporary removed
      tolerations:
      - effect: NoSchedule
        key: dedicated
        operator: Equal
      containers:
      - image: gcr.io/jetstack-build-infra/minikube-in-go-v1.8.10:0.12
        args:
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://jetstack-logs/pr-logs"
        - "--clean"
        <<: *minikube_small
        securityContext:
          privileged: true

  - name: cert-manager-e2e-v1-9
    context: cert-manager-e2e-v1-9
    trigger: "(?m)^/test( all| e2e( v?1.9)?|)( \\[.+\\])?$"
    rerun_command: "/test e2e v1.9"
    # Match everything except PRs that only touch docs/
    run_if_changed: (^[^d].*$)|(^.[^o].*$)|(^..[^c].*$)|(^...[^s].*$)|(^....[^/].*$)
    skip_report: false
    max_concurrency: 4
    agent: kubernetes
    labels:
      cert-manager-cloudflare-svc-acct: true
      preset-service-account: true
      libvirt-socket: true
      minikube-support: true
      minikube-size: small
    spec:
      nodeSelector:
        node-role.kubernetes.io/libvirt: ""
      # Note: this is not supported yet by prow PodSpec, taint temporary removed
      tolerations:
      - effect: NoSchedule
        key: dedicated
        operator: Equal
      containers:
      - image: gcr.io/jetstack-build-infra/minikube-in-go-v1.9.6:0.12
        args:
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://jetstack-logs/pr-logs"
        - "--clean"
        <<: *minikube_small
        securityContext:
          privileged: true

  - name: cert-manager-e2e-v1-10
    context: cert-manager-e2e-v1-10
    always_run: false
    trigger: "(?m)^/test( all| e2e( v?1.10)?|)( \\[.+\\])?$"
    rerun_command: "/test e2e v1.10"
    # Match everything except PRs that only touch docs/
    run_if_changed: (^[^d].*$)|(^.[^o].*$)|(^..[^c].*$)|(^...[^s].*$)|(^....[^/].*$)
    skip_report: true
    max_concurrency: 4
    agent: kubernetes
    labels:
      cert-manager-cloudflare-svc-acct: true
      preset-service-account: true
      libvirt-socket: true
      minikube-support: true
      minikube-size: small
    spec:
      nodeSelector:
        node-role.kubernetes.io/libvirt: ""
      # Note: this is not supported yet by prow PodSpec, taint temporary removed
      tolerations:
      - effect: NoSchedule
        key: dedicated
        operator: Equal
      containers:
      - image: gcr.io/jetstack-build-infra/minikube-in-go-v1.10.0:0.12
        args:
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://jetstack-logs/pr-logs"
        - "--clean"
        <<: *minikube_small
        securityContext:
          privileged: true

  jetstack/puppet-module-aws_ebs:
  - <<: *puppet_module_verify
    name: puppet-module-aws_ebs-quick-verify
    context: puppet-module-aws_ebs-quick-verify

  jetstack/puppet-module-calico:
  - <<: *puppet_module_verify
    name: puppet-module-calico-quick-verify
    context: puppet-module-calico-quick-verify
  - <<: *puppet_module_acceptance
    name: puppet-module-calico-acceptance
    context: puppet-module-calico-acceptance

  jetstack/puppet-module-etcd:
  - <<: *puppet_module_verify
    name: puppet-module-etcd-quick-verify
    context: puppet-module-etcd-quick-verify
  - <<: *puppet_module_acceptance
    name: puppet-module-etcd-acceptance-single-node
    context: puppet-module-etcd-acceptance-single-node
  - <<: *puppet_module_acceptance
    name: puppet-module-etcd-acceptance-three-node
    context: puppet-module-etcd-acceptance-three-node

  jetstack/puppet-module-kubernetes:
  - <<: *puppet_module_verify
    name: puppet-module-kubernetes-quick-verify
    context: puppet-module-kubernetes-quick-verify
  - <<: *puppet_module_acceptance
    name: puppet-module-kubernetes-acceptance
    context: puppet-module-kubernetes-acceptance

  jetstack/puppet-module-kubernetes_addons:
  - <<: *puppet_module_verify
    name: puppet-module-kubernetes_addons-quick-verify
    context: puppet-module-kubernetes_addons-quick-verify

  jetstack/puppet-module-prometheus:
  - <<: *puppet_module_verify
    name: puppet-module-prometheus-quick-verify
    context: puppet-module-prometheus-quick-verify

  jetstack/puppet-module-tarmak:
  - <<: *puppet_module_verify
    name: puppet-module-tarmak-quick-verify
    context: puppet-module-tarmak-quick-verify
  - <<: *puppet_module_acceptance
    name: puppet-module-tarmak-acceptance-1-10-centos
    context: puppet-module-tarmak-acceptance-1-10-centos
    always_run: false
    trigger: "(?m)^/test( all| acceptance-centos( v?1.10)?|)( \\[.+\\])?$"
    rerun_command: "/test acceptance-centos v1.10"
  - <<: *puppet_module_acceptance
    name: puppet-module-tarmak-acceptance-1-9-centos
    context: puppet-module-tarmak-acceptance-1-9-centos
    always_run: false
    trigger: "(?m)^/test( all| acceptance-centos( v?1.9)?|)( \\[.+\\])?$"
    rerun_command: "/test acceptance-centos v1.9"
  - <<: *puppet_module_acceptance
    name: puppet-module-tarmak-acceptance-1-8-centos
    context: puppet-module-tarmak-acceptance-1-8-centos
    always_run: true
    trigger: "(?m)^/test( all| acceptance-centos( v?1.8)?|)( \\[.+\\])?$"
    rerun_command: "/test acceptance-centos v1.8"
  - <<: *puppet_module_acceptance
    name: puppet-module-tarmak-acceptance-1-7-centos
    context: puppet-module-tarmak-acceptance-1-7-centos
    always_run: false
    trigger: "(?m)^/test( all| acceptance-centos( v?1.7)?|)( \\[.+\\])?$"
    rerun_command: "/test acceptance-centos v1.7"
  - <<: *puppet_module_acceptance
    name: puppet-module-tarmak-acceptance-1-6-centos
    context: puppet-module-tarmak-acceptance-1-6-centos
    always_run: false
    trigger: "(?m)^/test( all| acceptance-centos( v?1.6)?|)( \\[.+\\])?$"
    rerun_command: "/test acceptance-centos v1.6"
  - <<: *puppet_module_acceptance
    name: puppet-module-tarmak-acceptance-1-5-centos
    context: puppet-module-tarmak-acceptance-1-5-centos
    always_run: false
    trigger: "(?m)^/test( all| acceptance-centos( v?1.5)?|)( \\[.+\\])?$"
    rerun_command: "/test acceptance-centos v1.5"
  - <<: *puppet_module_acceptance
    name: puppet-module-tarmak-acceptance-1-7-ubuntu
    context: puppet-module-tarmak-acceptance-1-7-ubuntu
    always_run: false
    trigger: "(?m)^/test( all| acceptance-ubuntu( v?1.7)?|)( \\[.+\\])?$"
    rerun_command: "/test acceptance-ubuntu v1.7"

  jetstack/puppet-module-vault_client:
  - <<: *puppet_module_verify
    name: puppet-module-vault_client-quick-verify
    context: puppet-module-vault_client-quick-verify
  - <<: *puppet_module_acceptance
    name: puppet-module-vault_client-acceptance-centos
    context: puppet-module-vault_client-acceptance-centos
    trigger: "(?m)^/test( all| acceptance(-centos)?|)( \\[.+\\])?$"
    rerun_command: "/test acceptance-centos"
    always_run: true
  - <<: *puppet_module_acceptance
    name: puppet-module-vault_client-acceptance-ubuntu
    context: puppet-module-vault_client-acceptance-ubuntu
    trigger: "(?m)^/test( all| acceptance(-ubuntu)?|)( \\[.+\\])?$"
    rerun_command: "/test acceptance-ubuntu"
    always_run: true

  jetstack/tarmak:
  # puppet module aws_ebs
  - <<: *puppet_module_verify
    name: tarmak-puppet-module-aws_ebs-quick-verify
    context: tarmak-puppet-module-aws_ebs-quick-verify
    run_if_changed: "^(puppet/modules/aws_ebs).*$"
    trigger: "(?m)^/test( all| puppet| puppet-aws_ebs| puppet-verify| puppet-aws_ebs-verify|)( \\[.+\\])?$"
    rerun_command: "/test puppet-aws_ebs-verify"
  # puppet module aws_es_proxy
  - <<: *puppet_module_verify
    name: tarmak-puppet-module-aws_es_proxy-quick-verify
    context: tarmak-puppet-module-aws_es_proxy-quick-verify
    run_if_changed: "^(puppet/modules/aws_es_proxy).*$"
    trigger: "(?m)^/test( all| puppet| puppet-aws_es_proxy| puppet-verify| puppet-aws_es_proxy-verify|)( \\[.+\\])?$"
    rerun_command: "/test puppet-aws_es_proxy-verify"
  # puppet module calico
  - <<: *puppet_module_verify
    name: tarmak-puppet-module-calico-quick-verify
    context: tarmak-puppet-module-calico-quick-verify
    run_if_changed: "^(puppet/modules/calico).*$"
    trigger: "(?m)^/test( all| puppet| puppet-calico| puppet-verify| puppet-calico-verify|)( \\[.+\\])?$"
    rerun_command: "/test puppet-calico-verify"
  - <<: *puppet_module_acceptance
    name: tarmak-puppet-module-calico-acceptance
    context: tarmak-puppet-module-calico-acceptance
    run_if_changed: "^(puppet/modules/calico).*$"
    trigger: "(?m)^/test( all| puppet| puppet-calico| puppet-calico-acceptance|)( \\[.+\\])?$"
    rerun_command: "/test puppet-calico-acceptance"
  # puppet module etcd
  - <<: *puppet_module_verify
    name: tarmak-puppet-module-etcd-quick-verify
    context: tarmak-puppet-module-etcd-quick-verify
    run_if_changed: "^(puppet/modules/etcd).*$"
    trigger: "(?m)^/test( all| puppet| puppet-etcd| puppet-verify| puppet-etcd-verify|)( \\[.+\\])?$"
    rerun_command: "/test puppet-etcd-verify"
  - <<: *puppet_module_acceptance
    name: tarmak-puppet-module-etcd-acceptance-single-node
    context: tarmak-puppet-module-etcd-acceptance-single-node
    run_if_changed: "^(puppet/modules/etcd).*$"
    trigger: "(?m)^/test( all| puppet| puppet-etcd| puppet-etcd-acceptance-single-node|)( \\[.+\\])?$"
    rerun_command: "/test puppet-etcd-acceptance-single-node"
    run_after_success:
    - <<: *puppet_module_acceptance
      name: tarmak-puppet-module-etcd-acceptance-three-node
      context: tarmak-puppet-module-etcd-acceptance-three-node
      run_if_changed: "^(puppet/modules/etcd).*$"
      trigger: "(?m)^/test( all| puppet| puppet-etcd| puppet-etcd-acceptance-three-node|)( \\[.+\\])?$"
      rerun_command: "/test puppet-etcd-acceptance-three-node"
  # puppet module fluent_bit
  - <<: *puppet_module_verify
    name: tarmak-puppet-module-fluent_bit-quick-verify
    context: tarmak-puppet-module-fluent_bit-quick-verify
    run_if_changed: "^(puppet/modules/fluent_bit).*$"
    trigger: "(?m)^/test( all| puppet| puppet-fluent_bit| puppet-verify| puppet-fluent_bit-verify|)( \\[.+\\])?$"
    rerun_command: "/test puppet-fluent_bit-verify"
  - <<: *puppet_module_acceptance
    name: tarmak-puppet-module-fluent_bit-acceptance
    context: tarmak-puppet-module-fluent_bit-acceptance
    run_if_changed: "^(puppet/modules/fluent_bit).*$"
    trigger: "(?m)^/test( all| puppet| puppet-fluent_bit| puppet-fluent_bit-acceptance|)( \\[.+\\])?$"
    rerun_command: "/test puppet-fluent_bit-acceptance"
  # puppet module kubernetes
  - <<: *puppet_module_verify
    name: tarmak-puppet-module-kubernetes-quick-verify
    context: tarmak-puppet-module-kubernetes-quick-verify
    run_if_changed: "^(puppet/modules/kubernetes).*$"
    trigger: "(?m)^/test( all| puppet| puppet-kubernetes| puppet-verify| puppet-kubernetes-verify|)( \\[.+\\])?$"
    rerun_command: "/test puppet-kubernetes-verify"
  - <<: *puppet_module_acceptance
    name: tarmak-puppet-module-kubernetes-acceptance
    context: tarmak-puppet-module-kubernetes-acceptance
    run_if_changed: "^(puppet/modules/kubernetes).*$"
    trigger: "(?m)^/test( all| puppet| puppet-tarmak| puppet-kubernetes-acceptance|)( \\[.+\\])?$"
    rerun_command: "/test puppet-kubernetes-acceptance"
  # puppet module kubernetes_addons
  - <<: *puppet_module_verify
    name: tarmak-puppet-module-kubernetes_addons-quick-verify
    context: tarmak-puppet-module-kubernetes_addons-quick-verify
    run_if_changed: "^(puppet/modules/kubernetes_addons).*$"
    trigger: "(?m)^/test( all| puppet| puppet-kubernetes_addons| puppet-verify| puppet-kubernetes_addons-verify|)( \\[.+\\])?$"
    rerun_command: "/test puppet-kubernetes_addons-verify"
  # puppet module prometheus
  - <<: *puppet_module_verify
    name: tarmak-puppet-module-prometheus-quick-verify
    context: tarmak-puppet-module-prometheus-quick-verify
    run_if_changed: "^(puppet/modules/prometheus).*$"
    trigger: "(?m)^/test( all| puppet| puppet-prometheus| puppet-verify| puppet-prometheus-verify|)( \\[.+\\])?$"
    rerun_command: "/test puppet-prometheus-verify"
  # puppet module tarmak
  - <<: *puppet_module_verify
    name: tarmak-puppet-module-tarmak-quick-verify
    context: tarmak-puppet-module-tarmak-quick-verify
    run_if_changed: "^(puppet/modules).*$"
    trigger: "(?m)^/test( all| puppet| puppet-tarmak| puppet-verify| puppet-tarmak-verify|)( \\[.+\\])?$"
    rerun_command: "/test puppet-tarmak-verify"
  - <<: *puppet_module_acceptance
    name: tarmak-puppet-module-tarmak-acceptance-1-9-centos
    context: tarmak-puppet-module-tarmak-acceptance-1-9-centos
    run_if_changed: "^(puppet/modules).*$"
    trigger: "(?m)^/test( all| puppet| puppet-tarmak| puppet-tarmak-acceptance-centos( v?1.9)?|)( \\[.+\\])?$"
    rerun_command: "/test puppet-tarmak-acceptance-centos v1.9"
    run_after_success:
    - <<: *puppet_module_acceptance
      name: tarmak-puppet-module-tarmak-acceptance-1-9-ubuntu
      context: tarmak-puppet-module-tarmak-acceptance-1-9-ubuntu
      run_if_changed: "^(puppet/modules).*$"
      trigger: "(?m)^/test( all| puppet| puppet-tarmak| puppet-tarmak-acceptance-ubuntu( v?1.9)?|)( \\[.+\\])?$"
      rerun_command: "/test puppet-tarmak-acceptance-ubuntu v1.9"
    - <<: *puppet_module_acceptance
      name: tarmak-puppet-module-tarmak-acceptance-1-10-centos
      context: tarmak-puppet-module-tarmak-acceptance-1-10-centos
      run_if_changed: "^(puppet/modules).*$"
      trigger: "(?m)^/test( all| puppet| puppet-tarmak| puppet-tarmak-acceptance-centos( v?1.10)?|)( \\[.+\\])?$"
      rerun_command: "/test puppet-tarmak-acceptance-centos v1.10"
    - <<: *puppet_module_acceptance
      name: tarmak-puppet-module-tarmak-acceptance-1-8-centos
      context: tarmak-puppet-module-tarmak-acceptance-1-8-centos
      run_if_changed: "^(puppet/modules).*$"
      trigger: "(?m)^/test( all| puppet| puppet-tarmak| puppet-tarmak-acceptance-centos( v?1.8)?|)( \\[.+\\])?$"
      rerun_command: "/test puppet-tarmak-acceptance-centos v1.8"
    - <<: *puppet_module_acceptance
      name: tarmak-puppet-module-tarmak-acceptance-1-7-centos
      context: tarmak-puppet-module-tarmak-acceptance-1-7-centos
      run_if_changed: "^(puppet/modules).*$"
      trigger: "(?m)^/test( all| puppet| puppet-tarmak| puppet-tarmak-acceptance-centos( v?1.7)?|)( \\[.+\\])?$"
      rerun_command: "/test puppet-tarmak-acceptance-centos v1.7"
    - <<: *puppet_module_acceptance
      name: tarmak-puppet-module-tarmak-acceptance-1-6-centos
      context: tarmak-puppet-module-tarmak-acceptance-1-6-centos
      run_if_changed: "^(puppet/modules).*$"
      trigger: "(?m)^/test( all| puppet| puppet-tarmak| puppet-tarmak-acceptance-centos( v?1.6)?|)( \\[.+\\])?$"
      rerun_command: "/test puppet-tarmak-acceptance-centos v1.6"
    - <<: *puppet_module_acceptance
      name: tarmak-puppet-module-tarmak-acceptance-1-10-centos
      context: tarmak-puppet-module-tarmak-acceptance-1-10-centos
      run_if_changed: "^(puppet/modules).*$"
      trigger: "(?m)^/test( all| puppet| puppet-tarmak| puppet-tarmak-acceptance-centos( v?1.10)?|)( \\[.+\\])?$"
      rerun_command: "/test puppet-tarmak-acceptance-centos v1.10"
  # puppet module vault_client
  - <<: *puppet_module_verify
    name: tarmak-puppet-module-vault_client-quick-verify
    context: tarmak-puppet-module-vault_client-quick-verify
    run_if_changed: "^(puppet/modules/vault_client).*$"
    trigger: "(?m)^/test( all| puppet| puppet-vault_client| puppet-verify| puppet-vault_client-verify|)( \\[.+\\])?$"
    rerun_command: "/test puppet-vault_client-verify"
  - <<: *puppet_module_acceptance
    name: tarmak-puppet-module-vault_client-acceptance-centos
    context: tarmak-puppet-module-vault_client-acceptance-centos
    run_if_changed: "^(puppet/modules/vault_client).*$"
    trigger: "(?m)^/test( all| puppet| puppet-vault_client| puppet-vault_client-acceptance-centos|)( \\[.+\\])?$"
    rerun_command: "/test puppet-vault_client-acceptance-centos"
    run_after_success:
    - <<: *puppet_module_acceptance
      name: tarmak-puppet-module-vault_client-acceptance-ubuntu
      context: tarmak-puppet-module-vault_client-acceptance-ubuntu
      run_if_changed: "^(puppet/modules/vault_client).*$"
      trigger: "(?m)^/test( all| puppet| puppet-vault_client| puppet-vault_client-acceptance-ubuntu|)( \\[.+\\])?$"
      rerun_command: "/test puppet-vault_client-acceptance-ubuntu"

  - name: tarmak-quick-verify
    always_run: true
    skip_report: false
    context: tarmak-quick-verify
    max_concurrency: 2
    agent: kubernetes
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/jetstack-build-infra/gcloud-in-go:0.7
        args:
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://jetstack-logs/pr-logs"
        - "--clean"
        resources:
          requests:
            cpu: 750m
            memory: 1Gi
    trigger: "(?m)^/test( all| verify( quick)?|)( \\[.+\\])?$"
    rerun_command: "/test verify quick"

  - name: tarmak-docs-verify
    always_run: true
    skip_report: false
    context: tarmak-docs-verify
    max_concurrency: 2
    agent: kubernetes
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/jetstack-build-infra/sphinx-docs:0.1
        args:
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/workspace"
        - "--upload=gs://jetstack-logs/pr-logs"
        - "--clean"
        resources:
          requests:
            cpu: 750m
            memory: 1Gi
    trigger: "(?m)^/test( all| verify( docs)?|)( \\[.+\\])?$"
    rerun_command: "/test verify docs"


  jetstack/vault-helper:
  - name: vault-helper-quick-verify
    always_run: true
    skip_report: false
    context: vault-helper-quick-verify
    max_concurrency: 2
    agent: kubernetes
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/jetstack-build-infra/gcloud-in-go:0.10
        args:
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://jetstack-logs/pr-logs"
        - "--clean"
        resources:
          requests:
            cpu: 750m
            memory: 1Gi
    trigger: "(?m)^/test( all| verify|)( \\[.+\\])?$"
    rerun_command: "/test verify"

  jetstack/vault-unsealer:
  - name: vault-unsealer-quick-verify
    always_run: true
    skip_report: false
    context: vault-unsealer-quick-verify
    max_concurrency: 2
    agent: kubernetes
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/jetstack-build-infra/gcloud-in-go:0.10
        args:
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://jetstack-logs/pr-logs"
        - "--clean"
        resources:
          requests:
            cpu: 750m
            memory: 1Gi
    trigger: "(?m)^/test( all| verify|)( \\[.+\\])?$"
    rerun_command: "/test verify"

periodics:

- name: periodic-test-infra-retester
  interval: 20m  # Retest at most 1 PR per 20m, which should not DOS the queue.
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/commenter:v20170808-abf66782
      args:
      - |-
        --query=is:pr
        -label:do-not-merge
        -label:do-not-merge/blocked-paths
        -label:do-not-merge/cherry-pick-not-approved
        -label:do-not-merge/hold
        -label:do-not-merge/release-note-label-needed
        -label:do-not-merge/work-in-progress
        label:lgtm
        label:approved
        status:failure
        -label:needs-rebase
        -label:needs-ok-to-test
        -label:"cncf-cla: no"
        repo:jetstack/navigator
        repo:jetstack/cert-manager
      - --token=/etc/token/bot-github-token
      - |-
        --comment=/retest
        This bot automatically retries jobs that failed/flaked on approved PRs (send feedback to [jetstack](https://github.com/jetstack)).
        Review the [full test history](https://jetstack-build-infra.appspot.com/pr/{{.Number}}) for this PR.
        Silence the bot with an `/lgtm cancel` comment for consistent failures.
      - --template
      - --ceiling=1
      - --confirm
      - --updated=30m
      volumeMounts:
      - name: token
        mountPath: /etc/token
    volumes:
    - name: token
      secret:
        secretName: retest-bot-token

postsubmits:
  jetstack/tarmak:
  - name: tarmak-docs-push
    branches:
    - master
    - release-0.1
    - release-0.2
    context: tarmak-docs-push
    agent: kubernetes
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/jetstack-build-infra/sphinx-docs:0.1
        args:
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/workspace"
        - "--upload=gs://jetstack-logs/pr-logs"
        - "--clean"
        env:
        - name: DOCS_GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/docs-service-account/service-account.json
        resources:
          requests:
            cpu: 200m
            memory: 1Gi
        volumeMounts:
        - name: docs-service
          mountPath: /etc/docs-service-account
          readOnly: true
      volumes:
      - name: docs-service
        secret:
          secretName: tarmak-docs-push-service-account
